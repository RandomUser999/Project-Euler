// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

package main

import (
  "fmt"
)

func main() {
  nextNum := 0
  mySlice := []int{1,2}
  sum := 0

  for i := 0;; i++ {
      nextNum = nextFibNum(mySlice[i], mySlice[i+1])
      if nextNum < 4000000 {
        mySlice = append(mySlice, nextNum)
      } else {
        break
      }
  }

  for _, value := range mySlice {
    if value % 2 == 0 {
      sum += value
    }
  }
  fmt.Println(sum)

}

func nextFibNum(a int, b int) int {
  return a+b
}
